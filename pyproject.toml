[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-demo"
version = "0.1.0"
description = "Model Context Protocol (MCP) demonstration project - Learn MCP from beginner to expert"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MCP Demo Team"},
]
keywords = ["mcp", "model-context-protocol", "tutorial", "demo", "ai", "llm"]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Education",
]

# Core dependencies for MCP Demo
dependencies = [
    # ============================================================================
    # WEB FRAMEWORK & API
    # ============================================================================
    "fastapi>=0.104.0",           # Modern web framework for building APIs
    "uvicorn[standard]>=0.24.0",  # ASGI server for FastAPI applications
    "websockets>=12.0",           # WebSocket support for real-time communication
    "pydantic>=2.5.0",           # Data validation and settings management
    "jinja2>=3.1.0",             # Template engine for web pages
    
    # ============================================================================
    # DATABASE & STORAGE
    # ============================================================================
    "aiosqlite>=0.19.0",         # Async SQLite database interface
    
    # ============================================================================
    # CLI & UTILITIES
    # ============================================================================
    "click>=8.1.0",              # Command line interface creation toolkit
    "python-dotenv>=1.0.0",      # Load environment variables from .env files
    
    # ============================================================================
    # CORE UTILITIES
    # ============================================================================
    "httpx>=0.25.0",             # HTTP client for API calls
    "aiofiles>=23.0.0",          # Async file operations
    "python-multipart>=0.0.6",   # Multipart form data parsing
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "flake8>=6.1.0",
    "pre-commit>=3.4.0",
]

# Documentation dependencies
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

# All optional dependencies
all = [
    "mcp-demo[dev,docs]",
]

[project.urls]
Homepage = "https://github.com/karthik-ravi-1537/MCP-Demo"
Documentation = "https://github.com/karthik-ravi-1537/MCP-Demo#readme"
Repository = "https://github.com/karthik-ravi-1537/MCP-Demo.git"
Issues = "https://github.com/karthik-ravi-1537/MCP-Demo/issues"
Discussions = "https://github.com/karthik-ravi-1537/MCP-Demo/discussions"

[project.scripts]
mcp-demo = "cli:main"

# Package discovery - include all Python packages in the MCP directory
[tool.setuptools.packages.find]
where = ["."]
include = ["mcp_servers*", "server*", "tutorials*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"